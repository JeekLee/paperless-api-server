buildscript {
    ext {
        queryDslVersion = "5.0.0"
        springCloudVersion = "2023.0.0"
    }
}

plugins {
    id 'java'
    id 'idea'
    id 'org.springframework.boot' version '3.2.2'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'com.palantir.docker-compose' version '0.33.0'
}

group = 'org.example'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-aop'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    implementation 'org.springframework.boot:spring-boot-starter-websocket'

    implementation 'org.springframework.security:spring-security-messaging'
    implementation 'org.springframework.security:spring-security-web'

    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-jdbc', version: '3.2.3'

    implementation("org.springframework.boot:spring-boot-starter-data-redis")
    implementation 'org.redisson:redisson-spring-boot-starter:3.17.0'

    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'

    implementation 'com.amazonaws:aws-java-sdk-s3:1.12.710'
    implementation 'com.amazonaws:aws-java-sdk-cloudfront:1.12.118'
    implementation 'com.amazonaws:aws-java-sdk-lambda:1.12.760'

    implementation group: 'org.springdoc', name: 'springdoc-openapi-starter-webmvc-ui', version: '2.1.0'

    implementation 'org.mapstruct:mapstruct:1.5.5.Final'

    implementation 'com.github.f4b6a3:ulid-creator:5.2.0'

    // For Google Calendar API
    implementation 'com.google.apis:google-api-services-calendar:v3-rev20240517-2.0.0'
    implementation 'com.google.api-client:google-api-client:2.2.0'
    implementation 'com.google.oauth-client:google-oauth-client-jetty:1.34.1'
    implementation 'com.google.auth:google-auth-library-oauth2-http:1.19.0'
    implementation 'com.google.http-client:google-http-client-jackson2:1.43.3'

    implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'

    annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"

    annotationProcessor 'org.projectlombok:lombok'

    annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'

    runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-impl', version: '0.11.2'
    runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-jackson', version: '0.11.2'
    runtimeOnly 'com.mysql:mysql-connector-j:8.4.0'

    compileOnly 'org.projectlombok:lombok'
    compileOnly group: 'io.jsonwebtoken', name: 'jjwt-api', version: '0.11.2'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation group: 'junit', name: 'junit', version: '4.13.2'
    testImplementation 'org.springframework.security:spring-security-test'

    testImplementation 'org.testcontainers:testcontainers:1.19.7'
    testImplementation "org.testcontainers:junit-jupiter:1.19.7"
    testImplementation "org.testcontainers:mysql:1.19.7"

}

tasks.named('test') {
    useJUnitPlatform()
}

tasks.register('unitTest', Test) {
    group = 'verification'
    description = 'Runs the unit tests.'
    useJUnitPlatform {
        includeTags 'UNIT_TEST'
        excludeTags 'INTEGRATION_TEST'
    }
}

tasks.register('integrationTest', Test) {
    group = 'verification'
    description = 'Runs the integration tests.'
    useJUnitPlatform {
        includeTags 'INTEGRATION_TEST'
        excludeTags 'UNIT_TEST'
    }
}

// QueryDSL
def queryDslDir = "src/main/generated/queryDsl"
clean {
    delete file(queryDslDir)
}

tasks.withType(JavaCompile).configureEach {
    options.generatedSourceOutputDirectory = file(queryDslDir)
    options.compilerArgs << "-parameters"                       // Enable java.lang.reflect.Parameter during compile task
}

jar {
    enabled = false
}